# Global Environment Configuration
NODE_ENV=development

# Backend Configuration
BACKEND_PORT=3000
BACKEND_URL=http://localhost:3000

# Frontend Configuration
FRONTEND_PORT=5173
FRONTEND_URL=http://localhost:5173

# Database Configuration
DATABASE_URL=postgresql://booster_user:booster_dev_password@localhost:5434/boosterbeacon_dev
TEST_DATABASE_URL=postgresql://booster_user:booster_test_password@localhost:5435/boosterbeacon_test

# Redis Configuration
REDIS_URL=redis://:booster_redis_password@localhost:6380

# Redis Advanced Configuration (Optional)
REDIS_CONNECT_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_KEEPALIVE=30000
REDIS_POOL_MIN=2
REDIS_POOL_MAX=10

# JWT Configuration
JWT_SECRET=your_jwt_secret_key_here
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Logging
LOG_LEVEL=info

# External Services
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
SES_FROM_EMAIL=noreply@boosterbeacon.com

# Twilio (SMS)
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=your_twilio_phone_number

# Discord
DISCORD_BOT_TOKEN=your_discord_bot_token

# Retailer APIs
BESTBUY_API_KEY=your_bestbuy_api_key
WALMART_API_KEY=your_walmart_api_key

# Stripe Configuration (Example/Test)
# Use test keys for development; override in production securely.
STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key
STRIPE_SECRET_KEY=sk_test_your_secret_key
# Monthly subscription price ID (test)
STRIPE_PRO_MONTHLY_PRICE_ID=price_pro_monthly_test
# Yearly subscription price ID (test)
STRIPE_PRO_YEARLY_PRICE_ID=price_pro_yearly_test
# Premium monthly subscription price ID (test)
STRIPE_PREMIUM_MONTHLY_PRICE_ID=price_premium_monthly_test
# Optional Pro+ price ID (test)
STRIPE_PRO_PLUS_PRICE_ID=price_pro_plus_test
# One-time setup fee price ID for Premium only (test)
STRIPE_PREMIUM_SETUP_FEE_PRICE_ID=price_premium_setup_fee_test
# Optional webhook secret
# STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Queue Prioritization Weights (Premium > Pro > Free)
# Adjust numeric weights to tune scheduling preference (must be positive numbers)
QUEUE_PRIORITY_WEIGHT_PREMIUM=10
QUEUE_PRIORITY_WEIGHT_PRO=5
QUEUE_PRIORITY_WEIGHT_FREE=1

# Scanner Configuration (Retailer Availability Polling)
# Interval between batches, batch size of products, per-product pacing
SCANNER_INTERVAL_MS=120000
SCANNER_BATCH_SIZE=25
SCANNER_PRODUCT_DELAY_MS=250

# Key Management Service (KMS) Configuration
# Options: 'env' (environment variables), 'aws' (AWS KMS), 'gcp' (Google Cloud KMS), 'vault' (HashiCorp Vault)
KMS_PROVIDER=env
KMS_KEY_ID=default
KMS_TIMEOUT=10000
KMS_RETRY_ATTEMPTS=3

# Encryption Key (for development/testing when KMS_PROVIDER=env)
ENCRYPTION_KEY=your_encryption_key_here_32_chars_minimum

# AWS KMS Configuration (when KMS_PROVIDER=aws)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# Google Cloud KMS Configuration (when KMS_PROVIDER=gcp)
# GOOGLE_CLOUD_PROJECT=your_project_id
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# HashiCorp Vault Configuration (when KMS_PROVIDER=vault)
# VAULT_ADDR=https://vault.example.com:8200
# VAULT_TOKEN=your_vault_token
